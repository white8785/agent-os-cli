name: Main

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI (manual trigger always uses Test PyPI)'
        required: false
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install development dependencies
        run: make install-dev

      - name: Run tests
        run: make test


  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      
      - name: Install dependencies
        run: make install-dev
      
      - name: Run pre-CI checks
        run: make pre-ci
      
      - name: Build distribution
        run: make build
      
      - name: Check distribution
        run: |
          uv pip install twine
          uv run twine check dist/*
      
      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist/

  publish-testpypi:
    name: Publish to Test PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Download distribution
        uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist/
      
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          skip-existing: true
          attestations: false

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
      - name: Download distribution
        uses: actions/download-artifact@v4
        with:
          name: python-packages
          path: dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          attestations: false